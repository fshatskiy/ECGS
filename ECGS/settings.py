"""
Django settings for ECGS project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
import environ
#import pydot
from django.contrib.messages import constants as messages
from django.utils.translation import gettext_lazy as _


env = environ.Env()
environ.Env.read_env()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

os.environ["PATH"] += os.pathsep + 'C:\\Program Files\\Graphviz\\bin'
os.environ["PATH"] += os.pathsep + 'C:\\Program Files\\gettext-iconv\\bin'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-v5$8(i%di%_*a3^83pv7g9^(#=9ha3*heq5$rt0!w4=jf(rgk@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'phonenumber_field',
    "django_makemessages_xgettext",
    'django_simple_cookie_consent',
    'rosetta',
    
    'ecgsproject.apps.EcgsprojectConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ECGS.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                #'django.core.context_processors.i18n',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ECGS.wsgi.application'

# Django admin Theme settings
JAZZMIN_SETTINGS = {
    "site_title": "EcoSoft",
    "site_brand": "EcoSoft",
    "site_logo": "ecosoft-coupe.png",
    "site_logo_classes": "",
    "site_icon": "assets/img/favicon.ico",
    "welcome_sign": _("Bienvenue sur le site d'administration d'EcoSoft"),
    "copyright": "EcoGreenSoft",
    "show_ui_builder": True,
    "language_chooser": True,
    "related_modal_active": True,
    "order_with_respect_to": ["ecgsproject.CustomUser", "ecgsproject.Integrateur", "ecgsproject.Employe", "ecgsproject.Client", "ecgsproject.Contrat", "ecgsproject.Resultat"],
}





# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'ecgs-test',
        'HOST': env('HOST'),
        'PORT': env('PORT'),
        'USER': env('USER'),
        'PASSWORD': env('PASSWORD'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
                'OPTIONS': {
                    'user_attributes': (
                        'email'
                    ),
                    'max_similarity': 0.5
                }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

#default language for the site
LANGUAGE_CODE = 'fr-BE'

TIME_ZONE = 'Europe/Brussels'

# Utiles pour la traduction et le formattage des donn√©es

#support localization
USE_I18N = True
#calendars according to the current locale
USE_L10N = True

USE_TZ = True

TIME_INPUT_FORMATS = [
    '%H:%M:%S',     # '14:30:59'
    '%H:%M:%S.%f',  # '14:30:59.000200'
    '%H:%M',        # '14:30'
]

LANGUAGES = (
  ('fr', _('French')),
  ('en', _('English')),
)

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'ecgsproject/locale'),
)

LOGIN_URL = 'login'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

DJANGO_ADMIN_URL = 'admin/'

STATIC_URL = '/static/'

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]


#SMTP Configuration
#EMAIL_BACKEND = os.environ.get('EMAIL_BACKEND')
ACCOUNT_ACTIVATION_DAYS = 7
AUTH_USER_EMAIL_UNIQUE = True
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = env('EMAIL_HOST')
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')

PASSWORD_RESET_TIMEOUT_DAYS = 1

#AUTHENTICATION_BACKENDS = ['path.to.auth.module.EmailBackend']

MESSAGE_TAGS = {
        messages.DEBUG: 'alert-secondary',
        messages.INFO: 'alert-info',
        messages.SUCCESS: 'alert-success',
        messages.WARNING: 'alert-warning',
        messages.ERROR: 'alert-danger',
 }

LANGAUGE_CODE = 'fr'
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTH_USER_MODEL = 'ecgsproject.customuser'

GRAPH_MODELS = {
    "all_applications": True,
    "group_models": True,
}